// Code generated by ent, DO NOT EDIT.

package ent

import (
	"DeployDude/ent/project"
	"DeployDude/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescHashID is the schema descriptor for hash_id field.
	projectDescHashID := projectFields[0].Descriptor()
	// project.HashIDValidator is a validator for the "hash_id" field. It is called by the builders before save.
	project.HashIDValidator = projectDescHashID.Validators[0].(func(string) error)
	// projectDescTitle is the schema descriptor for title field.
	projectDescTitle := projectFields[1].Descriptor()
	// project.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	project.TitleValidator = projectDescTitle.Validators[0].(func(string) error)
	// projectDescGitURL is the schema descriptor for git_url field.
	projectDescGitURL := projectFields[2].Descriptor()
	// project.GitURLValidator is a validator for the "git_url" field. It is called by the builders before save.
	project.GitURLValidator = projectDescGitURL.Validators[0].(func(string) error)
	// projectDescDirPath is the schema descriptor for dir_path field.
	projectDescDirPath := projectFields[3].Descriptor()
	// project.DirPathValidator is a validator for the "dir_path" field. It is called by the builders before save.
	project.DirPathValidator = projectDescDirPath.Validators[0].(func(string) error)
}
