// Code generated by ent, DO NOT EDIT.

package project

const (
	// Label holds the string label denoting the project type in the database.
	Label = "project"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHashID holds the string denoting the hash_id field in the database.
	FieldHashID = "hash_id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldGitURL holds the string denoting the git_url field in the database.
	FieldGitURL = "git_url"
	// FieldDirPath holds the string denoting the dir_path field in the database.
	FieldDirPath = "dir_path"
	// Table holds the table name of the project in the database.
	Table = "projects"
)

// Columns holds all SQL columns for project fields.
var Columns = []string{
	FieldID,
	FieldHashID,
	FieldTitle,
	FieldGitURL,
	FieldDirPath,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// HashIDValidator is a validator for the "hash_id" field. It is called by the builders before save.
	HashIDValidator func(string) error
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// GitURLValidator is a validator for the "git_url" field. It is called by the builders before save.
	GitURLValidator func(string) error
	// DirPathValidator is a validator for the "dir_path" field. It is called by the builders before save.
	DirPathValidator func(string) error
)
